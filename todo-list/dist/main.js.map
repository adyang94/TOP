{"version":3,"sources":["webpack://todo-list/./src/index.js","webpack://todo-list/./src/localStorage.js","webpack://todo-list/./src/popOutForm.js","webpack://todo-list/./src/renderTasks.js","webpack://todo-list/./src/sidebar.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACyC;AACW;AACR;AACD;;AAE3C;;AAEA;;AAEA,yDAAW,KAAK,sEAA2B;AAC3C,sDAAY,CAAC,uEAA4B;;AAEzC;AACA;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,oCAAoC,MAAM,GAAG,qBAAqB,GAAG,eAAe;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AAME;;;;;;;;;;;;;;;;;AChEF;AAGwB;AACoB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,wEAA6B;AACjC,IAAI,yDAAW,CAAC,wDAAa,EAAE,sEAA2B;AAC1D,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE,yDAAW,CAAC,wDAAa,EAAE,gDAAK;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACzC3B;AACoD;;AAEpD;;AAEA;AACA,eAAe,QAAQ;AACvB,iDAAiD,cAAc;;AAE/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,eAAe;;AAEtD,mDAAmD,qBAAqB;;AAExE,uCAAuC,iBAAiB;AACxD,2CAA2C,mBAAmB;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA,0CAA0C,uBAAuB;AACjE;AACA,MAAM,iFAAsC;AAC5C;AACA,KAAK;AACL;;AAEA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACuB;;;;;;;;;;;;;;;;;;AC3DvB;AAGwB;AACoB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,cAAc,iDAAM,EAAE;;AAE5D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,IAAI,wEAA6B;AACjC;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,wDAAa,CAAC;AACpC,iBAAiB,iDAAM;AACvB;AACA;;AAEA;AACA;AACA;AACA,MAAM,yDAAW,gBAAgB,gDAAK;AACtC,KAAK;AACL;AACA,8BAA8B,KAAK;AACnC;AACA,kCAAkC,KAAK;AACvC;;AAEA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA,MAAM,wDAAa;AACnB,MAAM,iFAAsC,KAAK,iDAAM;AACvD,mBAAmB,uEAA4B;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACsC;;;;;;;UCzFtC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["// CONST AND VARIABLES--------------------------------------------\nimport { renderGroups } from './sidebar';\nimport { localStorageModule } from './localStorage';\nimport { renderTasks } from './renderTasks';\nimport { popOutSetup } from './popOutForm';\n\n// FUNCTIONS------------------------------------------------------\n\nconsole.log('1');\n\nrenderTasks('', localStorageModule.getTasks());\nrenderGroups(localStorageModule.getGroups());\n\n// SCRIPT---------------------------------------------------------\nconsole.log('JS file working');\n","// CONST AND VARIABLES--------------------------------------------\nlet groups = [];\nlet tasks = [];\nlet groupSelected;\n// FUNCTIONS------------------------------------------------------\nconst localStorageModule = (() => {\n  console.log('localStorageModule running!!!');\n  console.log({ groups });\n  console.log({ tasks });\n  // groupSelected functions below:\n  function storeGroupSelected(groupSelected) {\n    if (groupSelected !== '') {\n      localStorage.setItem('groupSelected', JSON.stringify(groupSelected));\n    }\n  }\n  function getGroupSelected() {\n    return JSON.parse(localStorageModule.getItem('groupSelected'));\n  }\n\n  //  groups and tasks functions below:\n  function getTasks() {\n    tasks = JSON.parse(localStorage.getItem('tasks'));\n    if (!tasks) {\n      tasks = [];\n    }\n    return tasks;\n  }\n  function getGroups() {\n    groups = JSON.parse(localStorage.getItem('groups'));\n    if (!groups) {\n      groups = [];\n    }\n    return groups;\n  }\n  function storeTasksAndGroups(tasks, groups) {\n    if (tasks !== '') {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      console.log({ tasks });\n    }\n    if (groups !== '') {\n      localStorage.setItem('groups', JSON.stringify(groups));\n      console.log({ groups });\n    }\n  }\n  function addNewInfo(newTask, newGroup) {\n    if (newTask !== '') {\n      console.log(`task is array? ${tasks} ${Array.isArray(tasks)} ${typeof (tasks)}`);\n      tasks.push(newTask);\n    }\n    if (newGroup !== '') {\n      groups.push(newGroup);\n    }\n    storeTasksAndGroups(tasks, groups);\n  }\n  return {\n    getTasks, getGroups, storeTasksAndGroups, addNewInfo, getGroupSelected, storeGroupSelected,\n  };\n})();\n// SCRIPT---------------------------------------------------------\nexport {\n  localStorageModule,\n  groups,\n  tasks,\n  groupSelected,\n};\n","// CONST AND VARIABLES--------------------------------------------\nimport {\n  groupSelected, localStorageModule, tasks,\n} from './localStorage';\nimport { renderTasks } from './renderTasks';\n\n// FUNCTIONS------------------------------------------------------\n\nconst popOutSetup = (() => {\n  const popOutForm = document.querySelector('#popOutForm');\n  const submitBtn = document.querySelector('.submitBtn');\n  const popOutTitle = document.querySelector('.popOutTitle');\n  const popOutDescription = document.querySelector('.popOutDescription');\n  const popOutDueDate = document.querySelector('.popOutDueDate');\n  let newTask;\n  const addTaskButton = document.querySelector('.addTaskBtn');\n  const popOutGroup = document.querySelector('.popOutGroup');\n\n  submitBtn.addEventListener('click', () => {\n    popOutForm.classList.remove('popOutFormOn');\n    popOutForm.classList.add('popOutFormOff');\n\n    newTask = new addNewTask(popOutTitle, popOutDescription, popOutDueDate, popOutGroup);\n    localStorageModule.addNewInfo(newTask, '');\n    renderTasks(groupSelected, localStorageModule.getTasks());\n  });\n  addTaskButton.addEventListener('click', () => {\n    popOutForm.classList.remove('popOutFormOff');\n    popOutForm.classList.add('popOutFormOn');\n    console.log('hello');\n  });\n  renderTasks(groupSelected, tasks);\n})();\n\nfunction addNewTask(title, description, dueDate, group) {\n  this.title = title.value;\n  this.description = description.value;\n  this.dueDate = dueDate.value;\n  this.taskGroup = group.value;\n}\n// SCRIPT---------------------------------------------------------\nexport default popOutSetup;\n","// CONST AND VARIABLES--------------------------------------------\nimport { localStorageModule } from './localStorage';\n\n// FUNCTIONS------------------------------------------------------\n\nfunction renderTasks(groupSelected, tasks) {\n  console.log({ tasks });\n  console.log(`group selected in render tasks: ${groupSelected}`);\n\n  const main = document.querySelector('.main');\n\n  // erase current tasks\n  while (main.firstChild) {\n    main.removeChild(main.firstChild);\n  }\n  if (tasks == null || undefined) {\n    return;\n  }\n  for (let i = 0; i < tasks.length; i++) {\n    // task container\n    const taskContainer = document.createElement('div');\n    taskContainer.classList.add('taskContainer');\n    taskContainer.dataset.task = i;\n    const taskText = document.createElement('p');\n\n    if (groupSelected) {\n      if (tasks[i].taskGroup !== groupSelected) {\n        continue;\n      }\n    }\n    taskText.innerHTML = `\n        <span class = \"title\">Title: ${tasks[i].title}</span><br>\n        \n        <span class = \"description\">Description: ${tasks[i].description}</span> <br>\n        \n        <span class = \"dueDate\">Due: ${tasks[i].dueDate}</span><br>\n        <span class = \"taskGroup\">Group: ${tasks[i].taskGroup}</span><br>`;\n    taskContainer.appendChild(taskText);\n\n    // remove button\n    const removeBtn = document.createElement('button');\n    removeBtn.classList.add('removeBtn');\n    removeBtn.dataset.task = i;\n    removeBtn.innerHTML = 'X';\n    console.log(`dataset btn: ${removeBtn.dataset.task}`);\n    removeBtn.addEventListener('click', (event, srcElement) => {\n      console.log(`remove dataset btn1: ${removeBtn.dataset.task}`);\n      tasks.splice(event.srcElement.dataset.task, 1);\n      localStorageModule.storeTasksAndGroups(tasks, '');\n      renderTasks(groupSelected, tasks);\n    });\n    taskContainer.appendChild(removeBtn);\n\n    // append all elements\n    main.appendChild(taskContainer);\n    console.log(`task group1: ${tasks[i].taskGroup}`);\n  }\n}\n// SCRIPT---------------------------------------------------------\nexport { renderTasks };\n","// ***Start with sidebarSetup***\nimport {\n  groups, groupSelected, localStorageModule, tasks,\n} from './localStorage';\nimport { renderTasks } from './renderTasks';\n\n// CONST AND VARIABLES--------------------------------------------\n\n// FUNCTIONS------------------------------------------------------\nconst addNewGroup = (() => {\n  // add new group in the sidebar menu.\n  const newGroupBtn = document.querySelector('.newGroupBtn');\n  const newGroupInputContainer = document.querySelector('.newGroupInputContainer');\n  const newGroupTitle = document.querySelector('.newGroupTitle');\n  // group title input\n  const submitNewGroupBtn = document.querySelector('.submitNewGroupBtn');\n\n  console.log(`Is groups an array1? ${Array.isArray(groups)}`);\n\n  newGroupBtn.addEventListener('click', () => {\n    // the code below will display the input to add new groups (current display is set to none in the HTML file.)\n    newGroupInputContainer.setAttribute('style', 'display: initial');\n  });\n  submitNewGroupBtn.addEventListener('click', () => {\n    // SUBMIT AND CREATE NEW GROUP\n    const newGroup = newGroupTitle.value;\n\n    localStorageModule.addNewInfo('', newGroup);\n    newGroupInputContainer.setAttribute('style', 'display: none');\n    renderGroups();\n  });\n})();\nfunction renderGroups() {\n  const groupsContainer = document.querySelector('.groupsContainer');\n  // remove all groups and render again.\n  while (groupsContainer.firstChild) {\n    groupsContainer.removeChild(groupsContainer.firstChild);\n  }\n  // rendering groups\n  for (let i = 0; i < groups.length; i++) {\n    const name = groups[i];\n    const groupContainer = document.createElement('div');\n    groupContainer.classList.add('groupContainer');\n\n    // functionality to click on the group name\n    groupContainer.addEventListener('click', () => {\n      const groupSelected = groupTitle.dataset.group;\n      renderTasks(groupSelected, tasks);\n    });\n    let groupTitle = document.createElement('div');\n    groupTitle.innerHTML = `${name}`;\n    groupTitle.classList.add('groupTitle');\n    groupTitle.dataset.group = `${name}`;\n    groupContainer.appendChild(groupTitle);\n\n    const groupRemoveBtn = document.createElement('button');\n    groupRemoveBtn.innerHTML = 'X';\n    groupRemoveBtn.classList.add('groupRemoveBtn');\n    groupRemoveBtn.dataset.group = `${i}`;\n    // remove group button\n    groupRemoveBtn.addEventListener('click', (event, srcElement) => {\n      groups.splice(event.srcElement.dataset.group, 1);\n      localStorageModule.storeTasksAndGroups('', groups);\n      renderGroups(localStorageModule.getGroups());\n    });\n    groupContainer.appendChild(groupRemoveBtn);\n    groupsContainer.appendChild(groupContainer);\n  }\n}\nconst toggleSidebar = (() => {\n  const closeSidebarBtn = document.querySelector('.closeSidebarBtn');\n  const toggleContainer = document.querySelector('.toggleContainer');\n  const sidebar = document.querySelector('.sidebar');\n\n  closeSidebarBtn.addEventListener('click', () => {\n    sidebar.classList.remove('openNav');\n    sidebar.classList.add('closeNav');\n  });\n  toggleContainer.addEventListener('click', () => {\n    sidebar.classList.remove('closeNav');\n    sidebar.classList.add('openNav');\n  });\n})();\nconst sidebarSetup = (() => {\n  console.log('sidebar setup working');\n  addNewGroup;\n  toggleSidebar;\n})();\n// SCRIPT---------------------------------------------------------\nexport { sidebarSetup, renderGroups };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}